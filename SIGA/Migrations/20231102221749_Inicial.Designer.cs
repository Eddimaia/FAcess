// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGA.API.Data;

#nullable disable

namespace SIGA.API.Migrations
{
    [DbContext(typeof(SIGAAppDbContext))]
    [Migration("20231102221749_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FuncionarioAcesso", b =>
                {
                    b.Property<int>("AcessoId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("AcessoId", "FuncionarioId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("FuncionarioAcesso");
                });

            modelBuilder.Entity("FuncionarioProjeto", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.HasKey("FuncionarioId", "ProjetoId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("FuncionarioProjeto");
                });

            modelBuilder.Entity("FuncionarioRole", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("FuncionarioId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("FuncionarioRole");
                });

            modelBuilder.Entity("SIGA.Lib.Models.Acesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Expiracao")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoAcesso")
                        .HasColumnType("int");

                    b.Property<int>("VPNId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("VPNId");

                    b.ToTable("Acesso");
                });

            modelBuilder.Entity("SIGA.Lib.Models.AnexoInstalacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientVPNId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientVPNId");

                    b.ToTable("AnexoInstalacao");
                });

            modelBuilder.Entity("SIGA.Lib.Models.ClientVPN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoInstalacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkDownload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VPNId")
                        .HasColumnType("int");

                    b.Property<string>("Versao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("VPNId");

                    b.ToTable("ClientVPN");
                });

            modelBuilder.Entity("SIGA.Lib.Models.Concessao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Concessao");
                });

            modelBuilder.Entity("SIGA.Lib.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PasswordHash");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("SIGA.Lib.Models.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("SIGA.Lib.Models.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("SIGA.Lib.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("SIGA.Lib.Models.VPN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcessoForaDoServidor")
                        .HasColumnType("bit");

                    b.Property<int?>("ConcessaoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConcessaoId");

                    b.ToTable("VPN");
                });

            modelBuilder.Entity("FuncionarioAcesso", b =>
                {
                    b.HasOne("SIGA.Lib.Models.Acesso", null)
                        .WithMany()
                        .HasForeignKey("AcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FuncionarioAcesso_AcessoId");

                    b.HasOne("SIGA.Lib.Models.Funcionario", null)
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FuncionarioAcesso_FuncionarioId");
                });

            modelBuilder.Entity("FuncionarioProjeto", b =>
                {
                    b.HasOne("SIGA.Lib.Models.Funcionario", null)
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FuncionarioProjeto_FuncionarioId");

                    b.HasOne("SIGA.Lib.Models.Projeto", null)
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FuncionarioProjeto_ProjetoId");
                });

            modelBuilder.Entity("FuncionarioRole", b =>
                {
                    b.HasOne("SIGA.Lib.Models.Funcionario", null)
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FuncionarioRole_FuncionarioId");

                    b.HasOne("SIGA.Lib.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FuncionarioRole_RoleId");
                });

            modelBuilder.Entity("SIGA.Lib.Models.Acesso", b =>
                {
                    b.HasOne("SIGA.Lib.Models.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIGA.Lib.Models.VPN", "VPN")
                        .WithMany()
                        .HasForeignKey("VPNId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");

                    b.Navigation("VPN");
                });

            modelBuilder.Entity("SIGA.Lib.Models.AnexoInstalacao", b =>
                {
                    b.HasOne("SIGA.Lib.Models.ClientVPN", "ClientVPN")
                        .WithMany("AnexosInstalacao")
                        .HasForeignKey("ClientVPNId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientVPN");
                });

            modelBuilder.Entity("SIGA.Lib.Models.ClientVPN", b =>
                {
                    b.HasOne("SIGA.Lib.Models.VPN", null)
                        .WithMany("ClientVPN")
                        .HasForeignKey("VPNId");
                });

            modelBuilder.Entity("SIGA.Lib.Models.Concessao", b =>
                {
                    b.HasOne("SIGA.Lib.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIGA.Lib.Models.Projeto", null)
                        .WithMany("Concessoes")
                        .HasForeignKey("ProjetoId");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("SIGA.Lib.Models.VPN", b =>
                {
                    b.HasOne("SIGA.Lib.Models.Concessao", null)
                        .WithMany("VPNs")
                        .HasForeignKey("ConcessaoId");
                });

            modelBuilder.Entity("SIGA.Lib.Models.ClientVPN", b =>
                {
                    b.Navigation("AnexosInstalacao");
                });

            modelBuilder.Entity("SIGA.Lib.Models.Concessao", b =>
                {
                    b.Navigation("VPNs");
                });

            modelBuilder.Entity("SIGA.Lib.Models.Projeto", b =>
                {
                    b.Navigation("Concessoes");
                });

            modelBuilder.Entity("SIGA.Lib.Models.VPN", b =>
                {
                    b.Navigation("ClientVPN");
                });
#pragma warning restore 612, 618
        }
    }
}
